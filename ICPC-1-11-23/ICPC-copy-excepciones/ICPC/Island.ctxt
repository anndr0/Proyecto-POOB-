#BlueJ class context
comment0.target=Island
comment0.text=\r\n\ The\ Island\ class\ represents\ an\ island\ with\ a\ polygon\ shape\ on\ the\ canvas.\r\n\ It\ allows\ to\ create\ and\ manipulate\ islands.\r\n\ Islands\ can\ be\ made\ visible\ or\ invisible,\ and\ their\ locations\ can\ be\ queried.\r\n\ \r\n\ @author\ Laura\ Natalia\ Rojas\ and\ Ana\ Maria\ Duran\r\n\ @version\ 23/09/23\r\n
comment1.params=color\ vertexArray
comment1.target=Island(java.lang.String,\ int[][])
comment1.text=\r\n\ Constructs\ an\ Island\ object\ with\ the\ specified\ vertex\ array\ and\ color.\r\n\ The\ island\ is\ created\ as\ a\ polygon\ with\ the\ given\ vertices\ and\ color.\r\n\ \ Los\ nombres\ de\ color\ v\u00E1lidos\ son\:\r\n\ \ \ \ \ \r\n\ @param\ vertexArray\ An\ array\ of\ vertices\ representing\ the\ island's\ shape.\r\n\ @param\ color\ \ \ \ \ \ \ The\ color\ of\ the\ island.\r\n
comment10.params=
comment10.target=boolean\ ok()
comment10.text=\r\n\ Checks\ if\ the\ island\ is\ completely\ within\ the\ specified\ flight.\r\n\r\n\ @param\ flight\ The\ flight\ to\ be\ checked.\r\n\ @return\ true\ if\ the\ island\ is\ completely\ within\ the\ flight,\ false\ otherwise.\r\n
comment11.params=flight
comment11.target=boolean\ isCompletelyInsideFlight(Flight)
comment11.text=\r\n\ Checks\ if\ the\ island\ is\ entirely\ within\ the\ specified\ flight.\r\n\r\n\ @param\ flight\ The\ flight\ to\ be\ verified.\r\n\ @return\ true\ if\ the\ island\ is\ entirely\ within\ the\ flight,\ false\ otherwise.\r\n
comment12.params=point\ flightVertex
comment12.target=boolean\ isInsideFlight(int[],\ int[])
comment12.text=\r\n\ Checks\ if\ a\ point\ (coordinates)\ is\ inside\ the\ flight.\r\n\r\n\ @param\ point\ \ \ \ \ \ The\ coordinates\ of\ the\ point\ to\ be\ verified.\r\n\ @param\ flightVertex\ The\ vertices\ of\ the\ flight.\r\n\ @return\ true\ if\ the\ point\ is\ inside\ the\ flight,\ false\ otherwise.\r\n
comment13.params=color\ boarder
comment13.target=void\ drawOutline(java.lang.String,\ java.lang.String)
comment13.text=\r\n\ Draws\ the\ outline\ of\ the\ island\ with\ the\ specified\ color.\r\n\r\n\ @param\ color\ The\ color\ of\ the\ island\ whose\ outline\ will\ be\ drawn.\r\n
comment2.params=
comment2.target=boolean\ isVisible()
comment2.text=\r\n\ Checks\ if\ the\ simulation\ is\ currently\ in\ a\ visible\ state.\r\n\r\n\ @return\ true\ if\ the\ simulation\ is\ visible,\ false\ if\ it's\ hidden.\r\n
comment3.params=
comment3.target=java.lang.String\ getColor()
comment3.text=\r\n\ Get\ the\ color\ of\ the\ island.\r\n\ \r\n\ @return\ The\ color\ of\ the\ island.\r\n
comment4.params=color
comment4.target=void\ makeIslandVisible(java.lang.String)
comment4.text=\r\n\ Make\ the\ island\ with\ the\ specified\ color\ visible.\r\n\ \r\n\ @param\ color\ The\ color\ of\ the\ island\ to\ make\ visible.\r\n
comment5.params=color
comment5.target=void\ makeIslandInvisible(java.lang.String)
comment5.text=\r\n\ Make\ the\ island\ with\ the\ specified\ color\ invisible.\r\n\ \r\n\ @param\ color\ The\ color\ of\ the\ island\ to\ make\ invisible.\r\n
comment6.params=color
comment6.target=void\ delIsland(java.lang.String)
comment6.text=\r\n\ Delete\ the\ island\ with\ the\ specified\ color.\r\n\ \r\n\ @param\ color\ The\ color\ of\ the\ island\ to\ delete.\r\n
comment7.params=color
comment7.target=int[][]\ locationIsland(java.lang.String)
comment7.text=\r\n\ Get\ the\ location\ of\ the\ island\ with\ the\ specified\ color.\r\n\ \r\n\ @param\ color\ The\ color\ of\ the\ island\ to\ query.\r\n\ @return\ A\ string\ representing\ the\ location\ of\ the\ island.\r\n
comment8.params=
comment8.target=int[][]\ getVertexArray()
comment8.text=\r\n\ Get\ the\ vertex\ array\ of\ the\ island.\r\n\ \r\n\ @return\ An\ array\ of\ vertices\ representing\ the\ island's\ shape.\r\n
comment9.params=
comment9.target=void\ showIslands()
comment9.text=\r\n\ Displays\ the\ islands\ stored\ in\ the\ HashMap,\ including\ their\ color\ and\ vertices.\r\n
numComments=14
