#BlueJ class context
comment0.target=IceepeeceeContest
comment0.text=\r\n\ The\ IceepeeceeContest\ class\ provides\ methods\ for\ solving\ and\ simulate\ Iceepeecee\ marathon\ problem.\r\n\ @author\ Ana\ Mar\u00EDa\ Dur\u00E1n\ And\ Laura\ Natalia\ Rojas\r\n\ @version\ 23/03/23\r\n
comment1.params=islands\ flights
comment1.target=double\ solveIceepeecee(int[][][],\ int[][][])
comment1.text=\r\n\ Solves\ an\ Iceepeecee\ challenge\ using\ given\ islands\ and\ flights\ data.\r\n\r\n\ @param\ islands\ An\ array\ of\ islands\ represented\ as\ three-dimensional\ coordinates.\r\n\ @param\ flights\ An\ array\ of\ flights\ represented\ as\ coordinates\ of\ starting\ and\ ending\ points.\r\n\ @return\ The\ calculated\ solution\ for\ the\ challenge\ as\ an\ angle\ in\ degrees.\r\n\ @throws\ IceepeeceeException\ If\ an\ exception\ related\ to\ Iceepeecee\ operations\ occurs.\r\n
comment2.params=islands\ flights
comment2.target=void\ simulate(int[][][],\ int[][][])
comment2.text=\r\n\ Simulates\ an\ Iceepeecee\ challenge\ using\ given\ islands\ and\ flights\ data.\r\n\r\n\ @param\ islands\ An\ array\ of\ islands\ represented\ as\ three-dimensional\ coordinates.\r\n\ @param\ flights\ An\ array\ of\ flights\ represented\ as\ coordinates\ of\ starting\ and\ ending\ points.\r\n\ @throws\ IceepeeceeException\ If\ an\ exception\ related\ to\ Iceepeecee\ operations\ occurs.\r\n
comment3.params=islands\ flights
comment3.target=double\ solveProblem(int[][][],\ int[][][])
comment3.text=\r\n\ Solves\ the\ angle\ problem\ based\ on\ islands\ and\ flights\ data.\r\n\r\n\ @param\ islands\ 3D\ array\ representing\ the\ islands'\ coordinates.\r\n\ @param\ flights\ 3D\ array\ representing\ the\ flights'\ coordinates.\r\n\ @return\ The\ minimum\ angle\ in\ degrees,\ or\ -1\ if\ it's\ impossible.\r\n
comment4.params=seen
comment4.target=boolean\ allIslandsSeen(boolean[])
comment4.text=\r\n\ Checks\ if\ all\ islands\ have\ been\ seen.\r\n\r\n\ @param\ seen\ An\ array\ of\ booleans\ representing\ island\ visibility.\r\n\ @return\ True\ if\ all\ islands\ have\ been\ seen,\ false\ otherwise.\r\n
comment5.params=a\ b\ c\ d
comment5.target=boolean\ lineSegmentIntersection(double[],\ double[],\ double[],\ double[])
comment5.text=\r\n\ Checks\ if\ two\ line\ segments\ intersect.\r\n\r\n\ @param\ a\ The\ first\ point\ of\ the\ first\ line\ segment.\r\n\ @param\ b\ The\ second\ point\ of\ the\ first\ line\ segment.\r\n\ @param\ c\ The\ first\ point\ of\ the\ second\ line\ segment.\r\n\ @param\ d\ The\ second\ point\ of\ the\ second\ line\ segment.\r\n\ @return\ True\ if\ the\ line\ segments\ intersect,\ false\ otherwise.\r\n
comment6.params=x1\ y1\ x2\ y2
comment6.target=double\ crossProduct(double,\ double,\ double,\ double)
comment6.text=\r\n\ Calculates\ the\ cross\ product\ of\ two\ vectors.\r\n\r\n\ @param\ x1\ The\ x-coordinate\ of\ the\ first\ vector.\r\n\ @param\ y1\ The\ y-coordinate\ of\ the\ first\ vector.\r\n\ @param\ x2\ The\ x-coordinate\ of\ the\ second\ vector.\r\n\ @param\ y2\ The\ y-coordinate\ of\ the\ second\ vector.\r\n\ @return\ The\ cross\ product\ of\ the\ two\ vectors.\r\n
numComments=7
